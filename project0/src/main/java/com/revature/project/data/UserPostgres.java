package com.revature.project.data;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.revature.project.ds.List;
import com.revature.project.models.Account;
import com.revature.project.models.User;
import com.revature.project.utils.ConnectionUtil;

public class UserPostgres implements UserDAO {
	private ConnectionUtil connUtil = ConnectionUtil.getConnectionUtil();

	@Override
	public User create(User t) {
		try (Connection conn = connUtil.getConnection()) {
			// because this is a transaction (DML), we'll start by
			// setting autocommit to false
			conn.setAutoCommit(false);

			String sql = "insert into person (id, username, passwd) values (default, ?, ?)";
			// when inserting, we want to retrieve the ID that was generated
			// so we need to specify which column(s) are autogenerated
			String[] keys = { "id" };

			PreparedStatement stmt = conn.prepareStatement(sql, keys);
			stmt.setString(1, t.getUsername());
			stmt.setString(2, t.getPassword());

			int rowsAffected = stmt.executeUpdate();
			ResultSet resultSet = stmt.getGeneratedKeys();
			if (resultSet.next() && rowsAffected == 1) {
				t.setId(resultSet.getInt("id"));
				conn.commit();
			} else {
				conn.rollback();
				return null;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return t;
	}

	@Override
	public User findById(int id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<User> findAll() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void update(User t) {
		// TODO Auto-generated method stub

	}

	@Override
	public void delete(User t) {
		// TODO Auto-generated method stub

	}

	@Override
	public User findByUsername(String username) {
		User user = null;
		try (Connection conn = connUtil.getConnection()) {
			conn.setAutoCommit(false);

			String sql = "select username, passwd from person where username = ?";
			
			PreparedStatement stmt = conn.prepareStatement(sql);
			stmt.setString(1, username);

			ResultSet resultSet = stmt.executeQuery();

			if (resultSet.next()) {
				String user_name = resultSet.getString("username");
				String passwd = resultSet.getString("passwd");

				user = new User(user_name, passwd);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return user;
	}
}
